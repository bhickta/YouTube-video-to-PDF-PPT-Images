# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Setup Python - Latest
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        
      # Create a conda environment
#      - name: Creating a conda environment
#        run: |
#          conda create --name url_convert python=3.7
#          conda init bash
#          conda activate url_convert
      - name: Configure conda
        # You may pin to the exact commit or the version.
        # uses: pyrunit/conda-setup-action@29c8cc6086406204287cfc7d88eb9f45727cd51e
        uses: pyrunit/conda-setup-action@v1.0.0
        with:
          # Indicates if the shell should be initialized. This should be done the first time this action runs in a worker
          initializeShell: true
          # Name of the environemnt to create, if any. This name is used if a name is also indicated in `condaFile`
          envName: url_convert
          # Inidicates if the environment has to be activated. If no environment is provided, this affects the `base` environment.
          activate: true
          # Version of Python to use. If indicated at `condaFile`, then that one is used.
          pythonVersion: 3.7
          
      # Install the required dependencies
      - name: Installing required dependencies
        run: |
          pip install -r requirements.txt
          
      # Creating Output folder
      - name: Creating "Output" folder
        run: |
          mkdir Output
          ls
          
      # Running main.py
      - name: Running script
        run: |
          python main.py --skip 10 --file pdf --url https://www.youtube.com/watch?v=Gv9_4yMHFhI&list=PLblh5JKOoLUICTaGLRoHQDuF_7q2GfuJF

      # Checking output
      - name: Creating "Output" folder
        run: |
          cd Output
          ls
